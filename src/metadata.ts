/* eslint-disable */
export default async () => {
    const t = {
        ["./records/dto/create-record.dto"]: await import("./records/dto/create-record.dto"),
        ["./auth/dto/token.dto"]: await import("./auth/dto/token.dto"),
        ["./children/dto/child-response.dto"]: await import("./children/dto/child-response.dto"),
        ["./records/dto/record-response.dto"]: await import("./records/dto/record-response.dto")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./auth/dto/register.dto"), { "RegisterDto": { email: { required: true, type: () => String, maxLength: 255 }, password: { required: true, type: () => String, minLength: 8, maxLength: 50, pattern: "/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\S]{8,}$/" } } }], [import("./auth/dto/token.dto"), { "TokenDto": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } } }], [import("./auth/dto/login.dto"), { "LoginDto": { email: { required: true, type: () => String, maxLength: 255 }, password: { required: true, type: () => String } } }], [import("./children/dto/create-child.dto"), { "CreateChildDto": { nickname: { required: true, type: () => String, maxLength: 100 }, dateOfBirth: { required: true, type: () => String }, gender: { required: false, type: () => String, maxLength: 20 }, allergyInfo: { required: false, type: () => [String] }, moreInfo: { required: false, type: () => String } } }], [import("./children/dto/update-child.dto"), { "UpdateChildDto": {} }], [import("./children/dto/child-response.dto"), { "ChildResponseDto": { id: { required: true, type: () => Number }, nickname: { required: true, type: () => String }, dateOfBirth: { required: true, type: () => Date }, gender: { required: false, type: () => String }, allergyInfo: { required: true, type: () => [String] }, moreInfo: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./records/dto/create-record.dto"), { "SleepDetailsDto": { sleepDuration: { required: true, type: () => String }, quality: { required: false, type: () => Number, minimum: 1, maximum: 5 }, environment: { required: false, type: () => String }, notes: { required: false, type: () => String } }, "FeedingDetailsDto": { feedingType: { required: true, enum: t["./records/dto/create-record.dto"].FeedingType }, amount: { required: true, type: () => Number, minimum: 0 }, unit: { required: false, type: () => String }, reaction: { required: false, type: () => String }, notes: { required: false, type: () => String } }, "DiaperDetailsDto": { hasUrine: { required: true, type: () => Boolean }, hasStool: { required: true, type: () => Boolean }, stoolColor: { required: false, type: () => String }, stoolConsistency: { required: false, type: () => String }, rashStatus: { required: false, type: () => String }, notes: { required: false, type: () => String } }, "NoteDetailsDto": { content: { required: true, type: () => String }, tags: { required: false, type: () => [String] } }, "CreateRecordDto": { childId: { required: true, type: () => Number }, recordType: { required: true, enum: t["./records/dto/create-record.dto"].RecordType }, recordTimestamp: { required: true, type: () => String }, details: { required: true, type: () => Object } } }], [import("./records/dto/update-record.dto"), { "UpdateRecordDto": { childId: { required: false, type: () => Number }, recordType: { required: false, enum: t["./records/dto/create-record.dto"].RecordType }, recordTimestamp: { required: false, type: () => String }, details: { required: false, type: () => Object } } }], [import("./records/dto/record-response.dto"), { "RecordResponseDto": { id: { required: true, type: () => Number }, childId: { required: true, type: () => Number }, recordType: { required: true, enum: t["./records/dto/create-record.dto"].RecordType }, details: { required: true, type: () => Object }, recordTimestamp: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String }, "getHelloName": { type: String } } }], [import("./health/health.controller"), { "HealthController": { "check": { type: Object } } }], [import("./auth/auth.controller"), { "AuthController": { "register": { type: Object }, "login": { type: t["./auth/dto/token.dto"].TokenDto }, "refreshToken": { type: t["./auth/dto/token.dto"].TokenDto }, "getProfile": { type: Object } } }], [import("./children/children.controller"), { "ChildrenController": { "create": { type: t["./children/dto/child-response.dto"].ChildResponseDto }, "findAll": { type: [t["./children/dto/child-response.dto"].ChildResponseDto] }, "findOne": { type: t["./children/dto/child-response.dto"].ChildResponseDto }, "update": { type: t["./children/dto/child-response.dto"].ChildResponseDto }, "remove": { type: t["./children/dto/child-response.dto"].ChildResponseDto } } }], [import("./records/records.controller"), { "RecordsController": { "create": { type: t["./records/dto/record-response.dto"].RecordResponseDto }, "findAllByChild": { type: [t["./records/dto/record-response.dto"].RecordResponseDto] }, "findOne": { type: t["./records/dto/record-response.dto"].RecordResponseDto }, "update": { type: t["./records/dto/record-response.dto"].RecordResponseDto }, "remove": { type: t["./records/dto/record-response.dto"].RecordResponseDto } } }]] }, "@nestjs/graphql/plugin": { "models": [[import("./common/models/base.model"), { "BaseModel": { id: {}, createdAt: {}, updatedAt: {} } }], [import("./common/pagination/pagination.args"), { "PaginationArgs": { skip: { nullable: true, type: () => Number }, after: { nullable: true, type: () => String }, before: { nullable: true, type: () => String }, first: { nullable: true, type: () => Number }, last: { nullable: true, type: () => Number } } }], [import("./common/pagination/page-info.model"), { "PageInfo": { endCursor: { nullable: true }, hasNextPage: {}, hasPreviousPage: {}, startCursor: { nullable: true } } }]] } };
};